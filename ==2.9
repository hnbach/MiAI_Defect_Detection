[1mdiff --git a/make_map.py b/make_map.py[m
[1mindex c8f35a5..abf329d 100644[m
[1m--- a/make_map.py[m
[1m+++ b/make_map.py[m
[36m@@ -66,12 +66,12 @@[m [mdef draw_defect(file, labels, w, h):[m
 [m
     try:[m
         # G√°n c√°c ƒëi·ªÉm thu·ªôc h√¨nh ellipse th√†nh 1[m
[31m-        mask_image[rr, cc] = 1[m
[32m+[m[32m        mask_image[rr, cc] = 255[m
     except:[m
         # N·∫øu l·ªói ch·ªâ g√°n c√°c ƒëi·ªÉm trong ·∫£nh[m
         rr_n = [min(511, rr[i]) for i in rr][m
         cc_n = [min(511, cc[i]) for i in cc][m
[31m-        mask_image[rr_n, cc_n] = 1[m
[32m+[m[32m        mask_image[rr_n, cc_n] = 255[m
         # mask_image = Image.fromarray(mask_image)[m
 [m
     # Chuy·ªÉn th√†nh ·∫£nh[m
[1mdiff --git a/setup.txt b/setup.txt[m
[1mindex dbe5b67..414bea6 100644[m
[1m--- a/setup.txt[m
[1m+++ b/setup.txt[m
[36m@@ -1,6 +1,7 @@[m
 scikit-learn[m
 scikit-image[m
[31m-tensorflow[m
[32m+[m[32mtensorflow==2.9[m
[32m+[m[32mkeras==2.9[m
 opencv-python-headless[m
 segmentation_models[m
 pillow[m
[1mdiff --git a/train_model.py b/train_model.py[m
[1mindex a575218..cfcae88 100644[m
[1m--- a/train_model.py[m
[1m+++ b/train_model.py[m
[36m@@ -146,7 +146,7 @@[m [mloss1 = sm.losses.categorical_focal_dice_loss[m
 model.compile(optimizer=opt,loss=loss1,metrics=[iou_score])[m
 [m
 # Train model[m
[31m-is_train = False[m
[32m+[m[32mis_train = True[m
 if is_train:[m
     from keras.callbacks import ModelCheckpoint[m
     filepath="checkpoint.hdf5"[m
